<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: #f4f7fb;
        }
        .container {
            background: white;
            padding: 2rem;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            max-width: 450px;
            width: 100%;
            text-align: center;
        }
        .container h2 {
            color: #333;
            margin-bottom: 1rem;
        }
        .container p {
            color: #666;
            margin-bottom: 1.5rem;
        }
        .otp-input {
            width: 100%;
            padding: 0.75rem;
            font-size: 1.1rem;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 5px;
            outline: none;
            transition: border-color 0.3s;
            margin-bottom: 1.5rem;
        }
        .otp-input:focus {
            border-color: #007bff;
        }
        button {
            background: #007bff;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1rem;
            transition: background 0.3s;
            width: 100%;
            margin-top: 0.5rem;
        }
        button:hover {
            background: #0056b3;
        }
        button:disabled {
            background: #cccccc;
            cursor: not-allowed;
        }
        .error {
            color: #dc3545;
            font-size: 0.9rem;
            margin-top: 1rem;
            display: none;
        }
        .resend {
            background: #1c757d;
        }
        .resend:hover {
            background: #1a6268;
        }
        .timer {
            color: #666;
            font-size: 0.9rem;
            margin-top: 0.5rem;
        }
        @media (max-width: 480px) {
            .container {
                padding: 1.5rem;
                margin: 1rem;
            }
            .otp-input {
                font-size: 1rem;
            }
        }
    </style>
</head>
<body>
<div class="container">
    <h2>Verify Your Email</h2>
    <p>Enter the 6-digit code sent to your email</p>
    <form id="otpForm" onsubmit="return validateOTPForm()">
        <input type="text" id="otp" class="otp-input" maxlength="6" pattern="[0-9]{6}" required placeholder="Enter OTP">
        <button type="submit" id="verifyBtn" disabled>Verify OTP</button>
        <p class="error" id="errorMsg">Invalid OTP. Please try again.</p>
        <button type="button" class="resend" id="resendBtn">Resend OTP</button>
        <p class="timer" id="timer"></p>
    </form>
</div>

<script>
    const otpInput = document.getElementById('otp');
    const verifyBtn = document.getElementById('verifyBtn');
    const errorMsg = document.getElementById('errorMsg');
    const resendBtn = document.getElementById('resendBtn');
    const timerDisplay = document.getElementById('timer');
    const RESEND_DELAY = 30; // 30 seconds delay for resend
    let timerInterval;

    // Start timer for resend OTP
    function startTimer() {
        let timeLeft = RESEND_DELAY;
        resendBtn.disabled = true;
        timerDisplay.textContent = `Resend available in ${timeLeft}s`;

        timerInterval = setInterval(() => {
            timeLeft--;
            timerDisplay.textContent = `Resend available in ${timeLeft}s`;
            
            if (timeLeft <= 0) {
                clearInterval(timerInterval);
                resendBtn.disabled = false;
                timerDisplay.textContent = '';
            }
        }, 1000);
    }

    // Enable/disable verify button based on input
    otpInput.addEventListener('input', () => {
        const isValid = otpInput.value.length === 6 && /^\d{6}$/.test(otpInput.value);
        verifyBtn.disabled = !isValid;
    });

    // Form submission via AJAX
    function validateOTPForm() {
        const otp = otpInput.value.trim();

        $.ajax({
            type: "POST",
            url: "/verify-otp",
            contentType: "application/json",
            data: JSON.stringify({ otp }),
            success: function(response) {
                if (response.success) {
                    Swal.fire({
                        icon: "success",
                        title: "OTP Verified Successfully",
                        showConfirmButton: false,
                        timer: 1500,
                    }).then(() => {
                        window.location.href = response.redirectUrl;
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Verification Failed",
                        text: response.message || "Invalid OTP. Please try again.",
                    });
                    errorMsg.style.display = 'block';
                    otpInput.value = '';
                    verifyBtn.disabled = true;
                    otpInput.focus();
                }
            },
            error: function() {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "An error occurred during verification. Please try again.",
                });
            }
        });
        return false; // Prevent default form submission
    }

    // Resend OTP
    function resendOTP() {
        clearInterval(timerInterval);
        otpInput.value = '';
        verifyBtn.disabled = true;
        
        $.ajax({
            type: "POST",
            url: "/resend-otp",
            success: function(response) {
                if (response.success) {
                    Swal.fire({
                        icon: "success",
                        title: "OTP Resent Successfully",
                        showConfirmButton: false,
                        timer: 1500
                    });
                    startTimer(); // Restart the timer after successful resend
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Failed to Resend OTP",
                        text: response.message || "Please try again later"
                    });
                    resendBtn.disabled = false;
                }
            },
            error: function() {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "Failed to connect to server"
                });
                resendBtn.disabled = false;
            }
        });
    }

    // Event listener for resend button
    resendBtn.addEventListener('click', resendOTP);

    // Start timer on page load
    startTimer();
</script>
</body>
</html>